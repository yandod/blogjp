---
layout: post
status: publish
published: true
title: MongoDB のベストプラクティス (翻訳版)
author: inessombra
author_login: inessombra
author_email: inessombra@engineyard.com
wordpress_id: 536
wordpress_url: http://www.engineyard.co.jp/blog/?p=536
date: 2013-02-14 10:39:19.000000000 +09:00
categories:
- Uncategorized
tags: []
comments: []
---
<div class="note">
本記事は<a href="http://www.engineyard.com/blog/2011/mongodb-best-practices/" target="_blank">英語版ブログで2011年12月20日に公開された記事</a>の翻訳版です。
</div>

<div>Engine Yard のデータ チームからご挨拶申し上げます。今回は、当チームで<a href="http://www.engineyard.com/blog/2011/introducing-the-engine-yard-data-team/">前回のブログ(英語版)</a>以来どのような努力をしてきたかをお知らせしたいと思います。</div>
今年当チームが編成された当初、最初に与えられた仕事は MongoDB を使ってスタックの機能を拡張することでした。しかし、NoSQL データストアをスタックに追加するだけで、当社がサポートするリレーショナル データベースを更新しないのでは、かえってお客様に迷惑をかけることになると私たちは感じました。そのため MongoDB の開発を一時中断し、MySQL と PostgreSQL の両方を更新することにしたわけです。今日現在、MySQL 5.5 は<a href="http://www.engineyard.com/blog/2011/mysql-5-5-is-in-beta/">ベータ版</a>が公開されており、PostgreSQL 9.1 のベータ版も近日中に公開されます。両方とも 2012 年第 1 四半期の一般公開を予定しています。

焦点を MongoDB に移してからは、カスタムの MongoDB 環境について何社かのお客様のお手伝いをしてきました。その過程で、潜在的問題を抱えたさまざまな設定を発見しました。そこで、この機会に、Engine Yard が推奨する MongoDB のベスト プラクティスをお伝えしたいと思います。

MongoDB のカスタム インストールを使用している場合は、お使いのインストールをこの記事と比較して確認してください。必要に応じて変更を加えることをお勧めします。支援が必要な場合 (当社製品で Mongo が提供されるようになるまで) は、当社の<a href="http://www.engineyard.com/services">プロフェッショナル サービス</a> チームが喜んでお手伝いいたします。
<h2>一般的な NoSQL のベスト プラクティス</h2>
NoSQL の選択については数多くの記事が書かれてきました。データベースの選択を左右する要因は、読み書きスループット、耐久性、データの整合性、待機時間といったアプリケーションのニーズに関連しています。この条件は Nathan Hurst 氏の『<a href="http://blog.nahurst.com/visual-guide-to-nosql-systems">Visual Guide to NoSQL Systems (NoSQL システムのビジュアル ガイド)</a>』にわかりやすくまとめられています。

この記事では正しい NoSQL データベースの選択には触れませんが、皆さんが独自に調査されるようお勧めします。すべてのシナリオに対処できるソリューションは存在しませんので、入念に調査する価値はあります。この記事では、調査の結果アプリケーションに MongoDB を使用することを決定したと仮定して説明を進めます。Engine Yard では以下のベスト プラクティスを推奨します。
<h4>テストを徹底させる</h4>
<div>アプリケーションのコンテキスト内で、本番システムを表すトラフィック パターンに対してテストを行います。テスト環境が本番のトラフィックと類似していない場合、パフォーマンスのボトルネックやアーキテクチャの設計エラーなどを見つけるのは困難となります。クエリをよく確認し、指標を常時収集します。</div>
<h4>RDBMS で機能が確認されていても、そのまま使えると仮定しない</h4>
<div>SQL データベースで機能したものが MongoDB でも機能するとは限りません。したがって、想定は現実的に、データベースの機能に応じたものとしてください。パフォーマンスを改善するには、<a href="http://www.10gen.com/">10gen</a> の推奨事項に従ってドキュメントやクエリを作成してください。非リレーショナル データストアへの移行には、アプリケーションのアーキテクチャを変える必要が生ずることもあります。NoSQL への移行についての詳細は、「<a href="http://nosql.mypopescu.com/post/6379284962/nosql-databases-the-cost-of-migration">The cost of Migration (移行のコスト)</a>」を参照してください。<strong></strong></div>
<h4>データの整合性および耐久性のニーズを考慮する</h4>
<div><em>耐久性と整合性に関するニーズを検討してください</em>。これは非常に重要な項目です。調査してみると、MongoDB ではレプリケーションによって耐久性が提供されることがわかります。本番環境でスタンドアロンの MongoDB を実行することは推奨されませんが、その理由を把握しておくようにしてください。</div>
<h4>EBS ボリュームで想定すべきことを理解する</h4>
<div>Engine Yard Cloud のお客様 (AWS EC2) なら、Amazon の Elastic Block Storage (EBS) のパフォーマンスがときに一貫性を欠くことはご存知だと思います。アプリケーションのベンチマークに際しては長時間のスループット指標を収集して、データをグラフ化してください。Engine Yard Managed のお客様にはこうした制限はありません。</div>
<h2>MongoDB のベスト プラクティス</h2>
以下は MongoDB を当社のスタック用に準備するにあたり、私たちが従うガイドラインです。
<h4>常にレプリカ セットを使用する</h4>
<div>レプリカ セットは自動フェールオーバーによる高い可用性を提供します。プライマリ ノードでエラーとなった場合はセカンダリ ノードがプライマリとして選択され、クラスターは正常な機能を維持します。当社では、本番環境でレプリカを使用しない MongoDB はサポートしていません。Mongo のレプリケートはコストが大きすぎるという場合は、ホストされたソリューションを検討してください。Engine Yard は <a href="http://www.mongohq.com/">MongoHQ</a> および <a href="https://mongolab.com/home">MongoLab</a> と提携関係を結んでいます。Engine Yard のお客様向けオファーについての詳細は、<a href="http://www.engineyard.com/partners">パートナー ページ</a>を参照してください。

</div>
<h4>バージョンを最新に保つ</h4>
<div>MongoDB のバージョンは最新のものに保ってください。10gen では、お客様のクラスターがスムーズに稼動するよう、各リリース内で多くの修正プログラムをロールアウトしています。<a href="http://www.mongodb.org/display/DOCS/2.0+Release+Notes">バージョン 2.0.x</a> には重要なパフォーマンスおよび並列処理の機能改善、インデックスの変更、バグ修正、圧縮コマンドが含まれるほか、クラスターのアップサイズもより簡単になっています。まだ 1.6.3 を使用している場合は、できるだけ早期にアップグレードしてください。</div>
<h4>MongoDB を 32 ビット システムで実行しない</h4>
<div>MongoDB には、<a href="http://blog.mongodb.org/post/137788967/32-bit-limitations">32 ビット システムにおける 2.5GB を上限とするデータ制限</a>があります。このシステムのストレージ エンジンではパフォーマンス向上のためにメモリ マッピングされたファイルが使用され、これらは使用可能なメモリ アドレッシングに結び付けられています。Engine Yard Cloud では基本インストールとしてラージ インスタンスを使用してください。当社では、本番用 MongoDB は 64 ビット インスタンスのみをサポートします。</div>
<h4>ジャーナルを既定でオンにする</h4>
<div>MongoDB では、クラッシュ回復を助けノード耐久性を上げるため、操作の先書きジャーナルをサポートします。このジャーナル機能は既定でオンにすることを強く推奨します。</div>
<h4>データ ファイルの場所に注意する</h4>
<div>レシピを確認して、MongoDB データ ファイルが永続的ボリューム (例: /data/mongodb) にあることを確かめます。一時ドライブを使用することも可能ですが、その場合はクラスターのアーキテクチャに影響するため、十分に注意してください。当社では MongoDB データに EBS を使用することをお勧めします。</div>
<h4>作業セットがメモリ内に収まるようにする</h4>
<div>作業セット (およびインデックス) をメモリ内に保持できることは、クラスターの全体的パフォーマンスを左右する重要な要因です。ページ フォールトが増えている場合には、利用できる RAM を作業セットが超えている可能性が大いにあります。
利用できる RAM をデータが超える場合、MongoDB インスタンスのサイズを大きくするか、またはシャーディングを行うかの 2 つのオプションがあります。当社ではまずインスタンスのサイズを大きくしてみることをお勧めします。</div>
<h4>指標が高い使用率を示す場合はスケールアップする</h4>
<div>インスタンスの負荷が 65% を超える場合、スケールアップを検討してください。通常の稼動状態では、負荷が常にこのしきい値未満でなければなりません。これは、回復およびスケールアップのシナリオにも影響します。インスタンスのサイズを増やす必要がある場合、AWS では、Large、Extra Large、High Memory 4XL というアップグレードパスを推奨しています。また、大容量の EBS ボリュームでは待ち時間が減ることも当社では観察しています。</div>
<h4>シャーディングは注意して実行する</h4>
<div>

シャーディングによるインストールでは、アプリケーションのデータ アクセス パターンをしっかりと把握しておく必要があります。MongoDB のシャーディングの仕組みを十分理解した上で、本当に必要かどうかを判断してください。また、シャーディングはパフォーマンスに影響するので、<a href="http://www.mongodb.org/display/DOCS/Choosing+a+Shard+Key">適切なシャーディング キーの選択</a>が重要であることも忘れないでください。

クラスターの正常性を保つには構成サーバーが不可欠です。シャーディングされた本番環境では必ず 3 つの構成サーバーが必要となります。サーバーのデータは絶対に削除せず、必ず頻繁にバックアップを取って、可能なときは /etc/hosts ファイルを使って名前で参照します (これによりクラスターの回復力が高まります)。

構成サーバーは軽いプロセスですが、64 ビット インスタンスで稼動する必要があります。3 つの構成サーバーをすべて同じインスタンスに設定しないでください。シャーディングされたインストールを検討している場合は、<a href="http://www.engineyard.com/services">Engine Yard プロフェッショナル サービス</a>との話し合いをスケジュールすることができます。

</div>
<h4>Mongo MMS を使ってサービスをグラフィカルに監視する</h4>
<div>まだ使っていない場合は <a href="https://mms.10gen.com/user/login">Mongo MMS</a> を是非お試しください。10gen ではこの製品を鋭意開発中で、クラスターの正常性を視覚的に評価する上で大いに役立つことが分かっています。</div>
<h4>MongoDB リソースの最新情報を把握する</h4>
<div>MongoDB には頻繁に変更が加えられます。以下の MongoDB リソースから最新情報を入手してください。
<ul>
	<li>ドキュメント:<a href="http://www.mongodb.org/display/DOCS/Home"> http://www.mongodb.org/display/DOCS/Home</a></li>
	<li>Google グループ: <a href="http://groups.google.com/group/mongodb-user">http://groups.google.com/group/mongodb-user</a></li>
	<li>バグ: <a href="https://jira.mongodb.org/">https://jira.mongodb.org</a></li>
	<li>ブログ:<a href="http://blog.mongodb.org/"> http://blog.mongodb.org/</a></li>
</ul>
</div>
<h3>ほかにも何か知りたい情報はありませんか? フィードバックをお願いいたします</h3>
<div>お客様からのフィードバックは、リリースの高速化、ブログ投稿の計画、ロードマップ チケットの優先度設定、その他さまざまな形で活用させていただきます。アルファ版やベータ版リリースをお試しになる場合やご質問がある場合は、是非<a href="http://docs.engineyard.com/data-feedback.html">お知らせください</a>。当社では引き続きリレーショナル データベースを最新状態・最適設定に保ち、今後も機能改善を行っていきます。

</div>
